"""1. Getting Started with FCN Pre-trained Models
==============================================

This is a quick demo of using GluonCV FCN model on PASCAL VOC dataset.
Please follow the `installation guide <../index.html>`_ to install MXNet and GluonCV if not yet.
"""
import mxnet as mx
from mxnet import image
from mxnet.gluon.data.vision import transforms

import gluoncv
import numpy as np
# using cpu
ctx = mx.gpu()


##############################################################################
# Prepare the image
# -----------------
#
# download the example image
#url = 'https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/1.jpg'
filename = 'example.jpg'
#gluoncv.utils.download(url, filename)

##############################################################################
# load the image
path = './test/test_multi/'
#img = image.imread(filename)
filename = 'nontrain2.png'
img = image.imread(path+filename)
#img = image.imread(path+'433_438_L_B_0.jpg')
#img2 = cv.imread('make.png')

from matplotlib import pyplot as plt
plt.imshow(img.asnumpy())
plt.show()
#img2 = img

##############################################################################
# normalize the image using dataset mean
transform_fn = transforms.Compose([
    transforms.ToTensor(),
    transforms.Normalize([.485, .456, .406], [.229, .224, .225])
])
img = transform_fn(img)
img = img.expand_dims(0).as_in_context(ctx)


##############################################################################
# Load the pre-trained model and make prediction
# ----------------------------------------------
#
# get pre-trained model
model = gluoncv.model_zoo.get_fcn(dataset='pascal_voc', backbone='resnet50', pretrained=False)
model2 = gluoncv.model_zoo.get_fcn(dataset='pascal_voc', backbone='resnet50', pretrained=False)
model3 = gluoncv.model_zoo.get_fcn(dataset='pascal_voc', backbone='resnet50', pretrained=False)
model4 = gluoncv.model_zoo.get_fcn(dataset='pascal_voc', backbone='resnet50', pretrained=False)
#if os.path.isfile(args.resume):
directory = "runs/pascal_voc/checkpoint_190725.params"
dir = "runs/pascal_voc/checkpoint_resnet152_0.001_50_0.9_e=50.params"
dir2 = "runs/pascal_voc/checkpoint_resnet101_0.001_20_0.9_e=50.params"
dir3 = "runs/pascal_voc/checkpoint_resnet101_0.001_50_0.9_e=100.params"
dir4 = "runs/pascal_voc/checkpoint_resnet50_0.001_20_0.9_e=50.params"
dir_drop5_50 = "runs/pascal_voc/checkpoint_resnet50_0.001_50_0.9_e=100_d_5.params"
dir_drop5_101="runs/pascal_voc/checkpoint_resnet101_0.001_50_0.9_e=100_d_5.params"
dir_drop5_101_lr="runs/pascal_voc/checkpoint_resnet101_0.001_20_0.9_e=100_d_5.params"
dir_drop5_50_lr = "runs/pascal_voc/checkpoint_resnet50_0.001_20_0.9_e=100_d_5.params"
dir_50_aug= "runs/pascal_voc/checkpoint_resnet50_0.001_20_0.9_e=100_d_5_plateaug.params"
dir_50_plate = "runs/pascal_voc/checkpoint_resnet50_0.001_20_0.9_e=100_d_5_plate.params"
model.load_parameters(dir_50_plate, ctx=ctx)
model2.load_parameters(directory, ctx = ctx)
model3.load_parameters(dir_50_aug, ctx = ctx)
model4.load_parameters(dir_drop5_50_lr, ctx = ctx)

##############################################################################
# make prediction using single scale
output = model.demo(img)
output2 = model2.demo(img)
output3 = model3.demo(img)
output4 = model4.demo(img)
#predict = mx.nd.squeeze(mx.nd.argmax(output, 1)).asnumpy()

#print(output[0,0:8,0,296])
"""
#print(mx.nd.exp(output[0,0:8,0,296]))
ex= mx.nd.exp(output[:,0:8,0:10,296:300])
print(ex.shape)
print(mx.nd.sum(ex, axis = 1))
#print(max(mx.nd.sum(ex, axis=0)), 1)

p = ex/mx.nd.sum(ex, axis = 1)
maxx = mx.nd.max(p, 1)
print(maxx)
p2 = p.asnumpy()
print(p2)
p2 = np.where(p2<=0.9, 0, p2)
p2[:,0] = 1-np.count_nonzero(p2, axis=1)
print(p2)
print(p)
for i in range(p.shape[2]):
    for j in range(p.shape[3]):
        if maxx[:, i, j]<0.9:
            p[:, 0, i, j] = 1


"""
threshold = 0.5
ex= mx.nd.exp(output)
ex2 = mx.nd.exp(output2)
ex3 = mx.nd.exp(output3)
ex4 = mx.nd.exp(output4)

#print(p[:,0:8])
"""
####################################not insert menu
pb = ex/mx.nd.sum(ex, axis=1)
#print(p)
pb2 = pb.asnumpy()
pb2 = np.where(pb2<=threshold, 0, pb2)
pb2[:,0] = 1-np.count_nonzero(pb2, axis=1)
##################################
"""
allMenuPath = "C:\\Users\\com\\PycharmProjects\\untitled\\runs\\pascal_voc\\class_names.txt"
allMenu = open(allMenuPath,'r')
MenuPath = "C:\\Users\\com\\PycharmProjects\\untitled\\runs\\pascal_voc\\menu.txt"
sMenu = open(MenuPath,'r')
all = []
select = []
while True:
    line = allMenu.readline()
    if not line:break
    all.append(line)
while True:
    line = sMenu.readline()
    if not line:break
    select.append(line)
allMenu.close()
sMenu.close()
menu = []
for i in range(len(select)):
    #print(select[i])
    if select[i] in all:
        menu.append(all.index(select[i]))

#print(menu)

#menu = [0,1,4,5,6,7]#####0327morning

############################################insert menu
new = mx.nd.zeros_like(ex)
m1 = ex.asnumpy()
m2 = ex2.asnumpy()
m3 = ex3.asnumpy()
m4 = ex4.asnumpy()
#menu = [0,4,7,8,12,14,15,16]####0327lunch
#menu = [0,4,7,8]

new2 = new.asnumpy()
new3 = new.asnumpy()
new4 = new.asnumpy()
new = new.asnumpy()

max1 = np.max(m1)
max2 = np.max(m2)
max3 = np.max(m3)########각 행렬의 최대값
max4 = np.max(m4)
#print(mm)

new[:,menu] = max1
new2[:,menu] = max2
new3[:,menu] = max3 ######menu에 있는 값 최대, 나머지 0
new4[:,menu] = max4

insert_menu = np.where(m1>new, 0, m1)
insert_menu = insert_menu/np.sum(insert_menu,axis=1)
insert_menu2 = np.where(m2>new2, 0, m2)
insert_menu2 = insert_menu2/np.sum(insert_menu2, axis=1)
insert_menu3 = np.where(m3>new3, 0, m3)
insert_menu3 = insert_menu3/np.sum(insert_menu3, axis=1)####### new보다 크면 0 아니면 그대로
insert_menu4 = np.where(m4>new4, 0, m4)
insert_menu4 = insert_menu4/np.sum(insert_menu4, axis=1)
#print(p2[:,menu])
#####################################menu

orig = insert_menu######model 1
orig2 = insert_menu2
orig3 = insert_menu3
orig4 = insert_menu4

mean = (insert_menu3+insert_menu2+insert_menu)/3###model 평균

orig = np.where(orig<=threshold,0,orig)
orig2 = np.where(orig2<=threshold,0,orig2)
orig3 = np.where(orig3<=threshold,0,orig3)
orig4 = np.where(orig4<=threshold,0,orig4)
mean = np.where(mean<=threshold,0,mean)
insert_menu = np.where(insert_menu<=threshold, 0, 1)
insert_menu2 = np.where(insert_menu2<=threshold,0,1)
insert_menu3 = np.where(insert_menu3<=threshold,0,1)####각 값이 t보다 작으면 0, 크면 1(vote용)

vote = insert_menu+insert_menu2+insert_menu3
vote = np.where(vote<2,0, vote)#########vote    과반수가 1로 했을때만 1

orig[:,0] = 1-np.count_nonzero(orig, axis=1)
orig2[:,0] = 1-np.count_nonzero(orig2, axis=1)
orig3[:,0] = 1-np.count_nonzero(orig3, axis=1)
orig4[:,0] = 1-np.count_nonzero(orig4, axis=1)
mean[:,0] = 1-np.count_nonzero(mean, axis=1)
vote[:,0] = 1-np.count_nonzero(vote, axis=1)



orig = mx.nd.array(orig)
orig2 = mx.nd.array(orig2)
orig3 = mx.nd.array(orig3)
orig4 = mx.nd.array(orig4)
vote = mx.nd.array(vote)
mean = mx.nd.array(mean)
#pb = mx.nd.array(pb2)######
#predict = mx.nd.squeeze(mx.nd.argmax(output, 1)).asnumpy()
predict = mx.nd.squeeze(mx.nd.argmax(orig, 1)).asnumpy()
predict2 = mx.nd.squeeze(mx.nd.argmax(orig2, 1)).asnumpy()
predict3 = mx.nd.squeeze(mx.nd.argmax(orig3, 1)).asnumpy()
predict4 = mx.nd.squeeze(mx.nd.argmax(orig4, 1)).asnumpy()
predict_vote = mx.nd.squeeze(mx.nd.argmax(vote, 1)).asnumpy()
predict_mean = mx.nd.squeeze(mx.nd.argmax(mean, 1)).asnumpy()
#predict_notmenu = mx.nd.squeeze(mx.nd.argmax(pb, 1)).asnumpy()######
##############################################################################
# Add color pallete for visualization
from gluoncv.utils.viz import get_color_pallete
import matplotlib.image as mpimg
mask = get_color_pallete(predict, 'pascal_voc')
mask_o2 = get_color_pallete(predict2, 'pascal_voc')
mask_o3= get_color_pallete(predict3, 'pascal_voc')
mask_o4= get_color_pallete(predict4, 'pascal_voc')
#mask_notmenu = get_color_pallete(predict_notmenu, 'pascal_voc')#####
mask2 = get_color_pallete(predict_vote, 'pascal_voc')
mask3 = get_color_pallete(predict_mean, 'pascal_voc')
mask.save('output.png')
mask_o2.save('output_o2.png')
mask_o3.save('output_o3.png')
mask_o4.save('output_o4.png')
#mask_notmenu.save('output2.png')#####
mask2.save('output2.png')
mask3.save('output3.png')

##############################################################################
# show the predicted mask
mmask = mpimg.imread('output.png')
mmask_o2 = mpimg.imread('output_o2.png')
mmask_o3 = mpimg.imread('output_o3.png')
mmask_o4 = mpimg.imread('output_o4.png')
mmask2 = mpimg.imread('output2.png')
mmask3 = mpimg.imread('output3.png')
#mmask2 = mpimg.imread('output2.png')######
plt.imshow(mmask)
plt.show()
plt.imshow(mmask_o2)
plt.show()
plt.imshow(mmask_o3)
plt.show()
plt.imshow(mmask_o4)
plt.show()
plt.imshow(mmask2)
plt.show()
plt.imshow(mmask3)
plt.show()
"""
from PIL import Image


img1 = Image.open(path+filename)
img2 = Image.open('output2.png')
img1 = np.array(img1)
img2 = np.array(img2)

new_img = np.ceil(img1 / 2 + img2 / 2)
new_img = np.uint8(new_img)

new_img = Image.fromarray(new_img)
plt.imshow(new_img)
plt.show()
new_img.save('test.png')
#img3 = cv.imread('output.png')
#img3 = cv.resize(img3, (img2.shape[1], img2.shape[0]))
#dst = cv.addWeighted(img2, 0.4, img3, 0.6, 0)
#cv.imshow('dst', dst)

"""

##############################################################################
# More Examples
# -------------
#
#.. image:: https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/4.jpg
#    :width: 45%
#
#.. image:: https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/4.png
#    :width: 45%
#
#.. image:: https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/5.jpg
#    :width: 45%
#
#.. image:: https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/5.png
#    :width: 45%
#
#.. image:: https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/6.jpg
#    :width: 45%
#
#.. image:: https://raw.githubusercontent.com/dmlc/web-data/master/gluoncv/segmentation/voc_examples/6.png
#    :width: 45%
